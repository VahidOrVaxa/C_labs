<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>