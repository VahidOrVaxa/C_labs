<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>